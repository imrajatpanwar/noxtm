{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useParams}from'react-router-dom';import'./BlogPost.css';import api from'../config/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function BlogPost(){var _blog$category,_blog$author;const{slug}=useParams();const[blog,setBlog]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const loadBlog=useCallback(async()=>{try{setLoading(true);const response=await api.get(\"/blogs/\".concat(slug));setBlog(response.data);// Update document title and meta description for SEO\ndocument.title=\"\".concat(response.data.title,\" - Noxtm\");// Update meta description\nconst metaDescription=document.querySelector('meta[name=\"description\"]');if(metaDescription){metaDescription.setAttribute('content',response.data.metaDescription);}else{const meta=document.createElement('meta');meta.name='description';meta.content=response.data.metaDescription;document.getElementsByTagName('head')[0].appendChild(meta);}// Add keywords meta tag\nconst metaKeywords=document.querySelector('meta[name=\"keywords\"]');if(response.data.keywords&&response.data.keywords.length>0){const keywordsString=response.data.keywords.join(', ');if(metaKeywords){metaKeywords.setAttribute('content',keywordsString);}else{const meta=document.createElement('meta');meta.name='keywords';meta.content=keywordsString;document.getElementsByTagName('head')[0].appendChild(meta);}}}catch(error){console.error('Failed to load blog:',error);setError('Blog post not found');}finally{setLoading(false);}},[slug]);useEffect(()=>{if(slug){loadBlog();}},[slug,loadBlog]);const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"blog-post-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading blog post...\"})});}if(error||!blog){return/*#__PURE__*/_jsx(\"div\",{className:\"blog-post-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"error-state\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Blog Post Not Found\"}),/*#__PURE__*/_jsx(\"p\",{children:error||'The blog post you are looking for does not exist.'})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"blog-post-container\",children:/*#__PURE__*/_jsxs(\"article\",{className:\"blog-post\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"blog-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"blog-meta-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"blog-category\",children:(_blog$category=blog.category)===null||_blog$category===void 0?void 0:_blog$category.name}),/*#__PURE__*/_jsx(\"span\",{className:\"blog-date\",children:formatDate(blog.publishedAt||blog.createdAt)}),/*#__PURE__*/_jsxs(\"span\",{className:\"blog-author\",children:[\"By \",(_blog$author=blog.author)===null||_blog$author===void 0?void 0:_blog$author.username]})]}),/*#__PURE__*/_jsx(\"h1\",{className:\"blog-title\",children:blog.title}),blog.featuredImage&&/*#__PURE__*/_jsx(\"div\",{className:\"blog-featured-image\",children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(api.defaults.baseURL).concat(blog.featuredImage.path),alt:blog.featuredImage.altText||blog.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"blog-description\",children:/*#__PURE__*/_jsx(\"p\",{children:blog.metaDescription})}),blog.keywords&&blog.keywords.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"blog-keywords\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"keywords-label\",children:\"Tags:\"}),blog.keywords.map((keyword,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"keyword-tag\",children:keyword},index))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"blog-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-html\",dangerouslySetInnerHTML:{__html:blog.content}})}),/*#__PURE__*/_jsxs(\"footer\",{className:\"blog-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blog-stats\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"view-count\",children:[blog.views,\" views\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"blog-share\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Share this post:\"}),/*#__PURE__*/_jsx(\"button\",{className:\"share-button\",onClick:()=>{if(navigator.share){navigator.share({title:blog.title,text:blog.metaDescription,url:window.location.href});}else{// Fallback to copying URL\nnavigator.clipboard.writeText(window.location.href);alert('URL copied to clipboard!');}},children:\"Share\"})]})]})]})});}export default BlogPost;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","api","jsx","_jsx","jsxs","_jsxs","BlogPost","_blog$category","_blog$author","slug","blog","setBlog","loading","setLoading","error","setError","loadBlog","response","get","concat","data","document","title","metaDescription","querySelector","setAttribute","meta","createElement","name","content","getElementsByTagName","appendChild","metaKeywords","keywords","length","keywordsString","join","console","formatDate","dateString","Date","toLocaleDateString","year","month","day","className","children","category","publishedAt","createdAt","author","username","featuredImage","src","defaults","baseURL","path","alt","altText","map","keyword","index","dangerouslySetInnerHTML","__html","views","onClick","navigator","share","text","url","window","location","href","clipboard","writeText","alert"],"sources":["C:/exe/noxtm/Frontend/src/components/BlogPost.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './BlogPost.css';\r\nimport api from '../config/api';\r\n\r\nfunction BlogPost() {\r\n  const { slug } = useParams();\r\n  const [blog, setBlog] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const loadBlog = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get(`/blogs/${slug}`);\r\n      setBlog(response.data);\r\n      \r\n      // Update document title and meta description for SEO\r\n      document.title = `${response.data.title} - Noxtm`;\r\n      \r\n      // Update meta description\r\n      const metaDescription = document.querySelector('meta[name=\"description\"]');\r\n      if (metaDescription) {\r\n        metaDescription.setAttribute('content', response.data.metaDescription);\r\n      } else {\r\n        const meta = document.createElement('meta');\r\n        meta.name = 'description';\r\n        meta.content = response.data.metaDescription;\r\n        document.getElementsByTagName('head')[0].appendChild(meta);\r\n      }\r\n\r\n      // Add keywords meta tag\r\n      const metaKeywords = document.querySelector('meta[name=\"keywords\"]');\r\n      if (response.data.keywords && response.data.keywords.length > 0) {\r\n        const keywordsString = response.data.keywords.join(', ');\r\n        if (metaKeywords) {\r\n          metaKeywords.setAttribute('content', keywordsString);\r\n        } else {\r\n          const meta = document.createElement('meta');\r\n          meta.name = 'keywords';\r\n          meta.content = keywordsString;\r\n          document.getElementsByTagName('head')[0].appendChild(meta);\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to load blog:', error);\r\n      setError('Blog post not found');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      loadBlog();\r\n    }\r\n  }, [slug, loadBlog]);\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"loading\">Loading blog post...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !blog) {\r\n    return (\r\n      <div className=\"blog-post-container\">\r\n        <div className=\"error-state\">\r\n          <h1>Blog Post Not Found</h1>\r\n          <p>{error || 'The blog post you are looking for does not exist.'}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-post-container\">\r\n      <article className=\"blog-post\">\r\n        <header className=\"blog-header\">\r\n          <div className=\"blog-meta-info\">\r\n            <span className=\"blog-category\">{blog.category?.name}</span>\r\n            <span className=\"blog-date\">{formatDate(blog.publishedAt || blog.createdAt)}</span>\r\n            <span className=\"blog-author\">By {blog.author?.username}</span>\r\n          </div>\r\n          \r\n          <h1 className=\"blog-title\">{blog.title}</h1>\r\n          \r\n          {blog.featuredImage && (\r\n            <div className=\"blog-featured-image\">\r\n              <img \r\n                src={`${api.defaults.baseURL}${blog.featuredImage.path}`}\r\n                alt={blog.featuredImage.altText || blog.title}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"blog-description\">\r\n            <p>{blog.metaDescription}</p>\r\n          </div>\r\n\r\n          {blog.keywords && blog.keywords.length > 0 && (\r\n            <div className=\"blog-keywords\">\r\n              <span className=\"keywords-label\">Tags:</span>\r\n              {blog.keywords.map((keyword, index) => (\r\n                <span key={index} className=\"keyword-tag\">\r\n                  {keyword}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </header>\r\n\r\n        <div className=\"blog-content\">\r\n          <div \r\n            className=\"content-html\"\r\n            dangerouslySetInnerHTML={{ __html: blog.content }}\r\n          />\r\n        </div>\r\n\r\n        <footer className=\"blog-footer\">\r\n          <div className=\"blog-stats\">\r\n            <span className=\"view-count\">{blog.views} views</span>\r\n          </div>\r\n          \r\n          <div className=\"blog-share\">\r\n            <span>Share this post:</span>\r\n            <button \r\n              className=\"share-button\"\r\n              onClick={() => {\r\n                if (navigator.share) {\r\n                  navigator.share({\r\n                    title: blog.title,\r\n                    text: blog.metaDescription,\r\n                    url: window.location.href\r\n                  });\r\n                } else {\r\n                  // Fallback to copying URL\r\n                  navigator.clipboard.writeText(window.location.href);\r\n                  alert('URL copied to clipboard!');\r\n                }\r\n              }}\r\n            >\r\n              Share\r\n            </button>\r\n          </div>\r\n        </footer>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}