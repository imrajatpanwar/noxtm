{"ast":null,"code":"import _objectSpread from\"/Users/aaravpanwar/noxtmstudio/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import api from'../config/api';import{jsx as _jsx}from\"react/jsx-runtime\";const RoleContext=/*#__PURE__*/createContext();export const useRole=()=>{const context=useContext(RoleContext);if(!context){throw new Error('useRole must be used within a RoleProvider');}return context;};// Define available modules/sections\nexport const MODULES={DASHBOARD:'dashboard',DATA_CENTER:'dataCenter',PROJECTS:'projects',DIGITAL_MEDIA:'digitalMediaManagement',TEAM_COMMUNICATION:'teamCommunication',MARKETING:'marketing',HR_MANAGEMENT:'hrManagement',FINANCE_MANAGEMENT:'financeManagement',SEO_MANAGEMENT:'seoManagement',INTERNAL_POLICIES:'internalPolicies',SETTINGS_CONFIG:'settingsConfiguration'};// Default role permissions\nexport const DEFAULT_PERMISSIONS={User:{[MODULES.DASHBOARD]:false,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:false,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:false,[MODULES.SETTINGS_CONFIG]:false},Visitor:{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:false,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:false,[MODULES.SETTINGS_CONFIG]:false},Admin:{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:true,[MODULES.PROJECTS]:true,[MODULES.DIGITAL_MEDIA]:true,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:true,[MODULES.HR_MANAGEMENT]:true,[MODULES.FINANCE_MANAGEMENT]:true,[MODULES.SEO_MANAGEMENT]:true,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:true},'Project Manager':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:true,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Data Miner':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:true,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Data Analyst':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:true,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Social Media Manager':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:true,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Human Resource':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:true,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:true},'Graphic Designer':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:true,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Web Developer':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:true,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:true,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:true},'SEO Manager':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:false,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:true,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false},'Marketing':{[MODULES.DASHBOARD]:true,[MODULES.DATA_CENTER]:false,[MODULES.PROJECTS]:false,[MODULES.DIGITAL_MEDIA]:false,[MODULES.TEAM_COMMUNICATION]:true,[MODULES.MARKETING]:true,[MODULES.HR_MANAGEMENT]:false,[MODULES.FINANCE_MANAGEMENT]:false,[MODULES.SEO_MANAGEMENT]:false,[MODULES.INTERNAL_POLICIES]:true,[MODULES.SETTINGS_CONFIG]:false}};export const RoleProvider=_ref=>{let{children}=_ref;const[userPermissions,setUserPermissions]=useState({});const[users,setUsers]=useState([]);const[currentUser,setCurrentUser]=useState(null);// Fetch users from backend\nconst fetchUsersFromBackend=async()=>{try{const token=localStorage.getItem('token');if(!token)return null;const response=await api.get('/users');console.log('Fetched users from backend:',response.data.users);// Transform backend data to match frontend format\nconst transformedUsers=response.data.users.map(user=>{// Get default permissions for the user's role\nconst roleDefaultPermissions=DEFAULT_PERMISSIONS[user.role]||{};// Merge backend permissions with role defaults\n// Backend permissions override role defaults\nconst mergedPermissions=_objectSpread({},roleDefaultPermissions);// Apply user-specific permissions from backend\nif(user.permissions){Object.keys(user.permissions).forEach(key=>{// Only override if the permission is explicitly set in backend\nif(user.permissions[key]!==undefined&&user.permissions[key]!==null){mergedPermissions[key]=user.permissions[key];}});}return{id:user._id,name:user.username,email:user.email,role:user.role,status:user.status||'Active',access:user.access||[],permissions:mergedPermissions};});console.log('Transformed users:',transformedUsers);return transformedUsers;}catch(error){console.error('Error fetching users from backend:',error);return null;}};// Load user data from localStorage or API\nuseEffect(()=>{const loadUserData=async()=>{const userData=JSON.parse(localStorage.getItem('user')||'{}');setCurrentUser(userData);// Get user's role permissions\nif(userData.role){const permissions=DEFAULT_PERMISSIONS[userData.role]||{};setUserPermissions(permissions);}// Try to fetch from backend first\nconst backendUsers=await fetchUsersFromBackend();if(backendUsers&&backendUsers.length>0){setUsers(backendUsers);localStorage.setItem('usersData',JSON.stringify(backendUsers));}else{// Fall back to local data\nconst storedUsers=JSON.parse(localStorage.getItem('usersData')||'[]');setUsers(storedUsers);}};loadUserData();},[]);// Check if user has permission for a module\nconst hasPermission=module=>{var _users$find;if(!currentUser||!currentUser.role)return false;// Admin has access to everything\nif(currentUser.role==='Admin')return true;// Check specific user permissions (overrides)\nconst userSpecificPermissions=(_users$find=users.find(u=>u.id===currentUser.id))===null||_users$find===void 0?void 0:_users$find.permissions;if(userSpecificPermissions&&userSpecificPermissions.hasOwnProperty(module)){return userSpecificPermissions[module];}// Check default role permissions\nreturn userPermissions[module]||false;};// Update user permissions (admin function)\nconst updateUserPermissions=async(userId,permissions)=>{try{const token=localStorage.getItem('token');// Check if we're using demo data (string IDs) vs real backend data (ObjectIds)\nconst isDemoData=typeof userId==='string'&&/^[0-9]+$/.test(userId);console.log('User ID:',userId,'Type:',typeof userId,'Is demo data:',isDemoData);console.log('Token exists:',!!token);if(token&&!isDemoData){// Update on backend\nconsole.log('Making API call to update permissions:',{userId,permissions});console.log('API URL:',\"/users/\".concat(userId,\"/permissions\"));const response=await api.put(\"/users/\".concat(userId,\"/permissions\"),{permissions});console.log('API response:',response.data);console.log('User permissions from response:',response.data.user.permissions);console.log('User access from response:',response.data.user.access);// Get the updated permissions from the response\nconst updatedPermissions=response.data.user.permissions||{};// Update local state with the backend response\nconst updatedUsers=users.map(user=>{if(user.id===userId){// Get default permissions for the user's role\nconst roleDefaultPermissions=DEFAULT_PERMISSIONS[user.role]||{};// Merge with updated permissions from backend\nconst mergedPermissions=_objectSpread({},roleDefaultPermissions);Object.keys(updatedPermissions).forEach(key=>{if(updatedPermissions[key]!==undefined&&updatedPermissions[key]!==null){mergedPermissions[key]=updatedPermissions[key];}});// Sync access array with permissions\nconst accessArray=[];if(mergedPermissions[MODULES.DATA_CENTER])accessArray.push('Data Cluster');if(mergedPermissions[MODULES.PROJECTS])accessArray.push('Projects');if(mergedPermissions[MODULES.FINANCE_MANAGEMENT])accessArray.push('Finance');if(mergedPermissions[MODULES.DIGITAL_MEDIA])accessArray.push('Digital Media');if(mergedPermissions[MODULES.MARKETING])accessArray.push('Marketing');return _objectSpread(_objectSpread({},user),{},{permissions:mergedPermissions,access:accessArray});}return user;});console.log('Updated users after permission change:',updatedUsers);setUsers(updatedUsers);localStorage.setItem('usersData',JSON.stringify(updatedUsers));// If updating current user, update current permissions\nif(userId===(currentUser===null||currentUser===void 0?void 0:currentUser.id)){setUserPermissions(prev=>_objectSpread(_objectSpread({},prev),permissions));}return{success:true};}else if(isDemoData){// For demo data, just update locally\nconst updatedUsers=users.map(user=>{if(user.id===userId){const updatedUserPermissions=_objectSpread(_objectSpread({},user.permissions),permissions);// Sync access array with permissions\nconst accessArray=[];if(updatedUserPermissions[MODULES.DATA_CENTER])accessArray.push('Data Cluster');if(updatedUserPermissions[MODULES.PROJECTS])accessArray.push('Projects');if(updatedUserPermissions[MODULES.FINANCE_MANAGEMENT])accessArray.push('Finance');if(updatedUserPermissions[MODULES.DIGITAL_MEDIA])accessArray.push('Digital Media');if(updatedUserPermissions[MODULES.MARKETING])accessArray.push('Marketing');return _objectSpread(_objectSpread({},user),{},{permissions:updatedUserPermissions,access:accessArray});}return user;});setUsers(updatedUsers);localStorage.setItem('usersData',JSON.stringify(updatedUsers));if(userId===(currentUser===null||currentUser===void 0?void 0:currentUser.id)){setUserPermissions(prev=>_objectSpread(_objectSpread({},prev),permissions));}return{success:true};}return{success:false,error:'No valid token or user data'};}catch(error){var _error$response,_error$response$data;console.error('Error updating user permissions:',error);return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message};}};// Get user permissions\nconst getUserPermissions=userId=>{const user=users.find(u=>u.id===userId);if(!user)return{};// User permissions are already merged in fetchUsersFromBackend\n// Just return the user's permissions\nreturn user.permissions||{};};// Update user role (admin function)\nconst updateUserRole=async function(userId,newRole){let newStatus=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const token=localStorage.getItem('token');// Check if we're using demo data (string IDs) vs real backend data (ObjectIds)\nconst isDemoData=typeof userId==='string'&&/^[0-9]+$/.test(userId);if(token&&!isDemoData){// Try to update on backend first (only for real backend data)\ntry{const updateData={role:newRole};if(newStatus){updateData.status=newStatus;}await api.put(\"/users/\".concat(userId),updateData);}catch(apiError){var _apiError$response;// If the endpoint doesn't exist (404), log and continue with local update\nif(((_apiError$response=apiError.response)===null||_apiError$response===void 0?void 0:_apiError$response.status)===404){console.log('User update endpoint not found, updating locally only');// The local state will still be updated below\n}else{throw apiError;// Re-throw if it's a different error\n}}}// Update local state\nconst updatedUsers=users.map(user=>{if(user.id===userId){const updatedUser=_objectSpread(_objectSpread({},user),{},{role:newRole});if(newStatus){updatedUser.status=newStatus;}return updatedUser;}return user;});setUsers(updatedUsers);localStorage.setItem('usersData',JSON.stringify(updatedUsers));return{success:true};}catch(error){var _error$response2,_error$response2$data;console.error('Error updating user role:',error);// Still update locally as fallback\nconst updatedUsers=users.map(user=>{if(user.id===userId){const updatedUser=_objectSpread(_objectSpread({},user),{},{role:newRole});if(newStatus){updatedUser.status=newStatus;}return updatedUser;}return user;});setUsers(updatedUsers);localStorage.setItem('usersData',JSON.stringify(updatedUsers));return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message};}};// Get all users with their permissions\nconst getAllUsersWithPermissions=()=>{return users.map(user=>_objectSpread(_objectSpread({},user),{},{permissions:getUserPermissions(user.id)}));};const value={currentUser,userPermissions,users,hasPermission,updateUserPermissions,updateUserRole,getUserPermissions,getAllUsersWithPermissions,setUsers,fetchUsersFromBackend,MODULES,DEFAULT_PERMISSIONS};return/*#__PURE__*/_jsx(RoleContext.Provider,{value:value,children:children});};export default RoleContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","RoleContext","useRole","context","Error","MODULES","DASHBOARD","DATA_CENTER","PROJECTS","DIGITAL_MEDIA","TEAM_COMMUNICATION","MARKETING","HR_MANAGEMENT","FINANCE_MANAGEMENT","SEO_MANAGEMENT","INTERNAL_POLICIES","SETTINGS_CONFIG","DEFAULT_PERMISSIONS","User","Visitor","Admin","RoleProvider","_ref","children","userPermissions","setUserPermissions","users","setUsers","currentUser","setCurrentUser","fetchUsersFromBackend","token","localStorage","getItem","response","get","console","log","data","transformedUsers","map","user","roleDefaultPermissions","role","mergedPermissions","_objectSpread","permissions","Object","keys","forEach","key","undefined","id","_id","name","username","email","status","access","error","loadUserData","userData","JSON","parse","backendUsers","length","setItem","stringify","storedUsers","hasPermission","module","_users$find","userSpecificPermissions","find","u","hasOwnProperty","updateUserPermissions","userId","isDemoData","test","concat","put","updatedPermissions","updatedUsers","accessArray","push","prev","success","updatedUserPermissions","_error$response","_error$response$data","message","getUserPermissions","updateUserRole","newRole","newStatus","arguments","updateData","apiError","_apiError$response","updatedUser","_error$response2","_error$response2$data","getAllUsersWithPermissions","value","Provider"],"sources":["/Users/aaravpanwar/noxtmstudio/Frontend/src/contexts/RoleContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/api';\n\nconst RoleContext = createContext();\n\nexport const useRole = () => {\n  const context = useContext(RoleContext);\n  if (!context) {\n    throw new Error('useRole must be used within a RoleProvider');\n  }\n  return context;\n};\n\n// Define available modules/sections\nexport const MODULES = {\n  DASHBOARD: 'dashboard',\n  DATA_CENTER: 'dataCenter',\n  PROJECTS: 'projects',\n  DIGITAL_MEDIA: 'digitalMediaManagement',\n  TEAM_COMMUNICATION: 'teamCommunication',\n  MARKETING: 'marketing',\n  HR_MANAGEMENT: 'hrManagement',\n  FINANCE_MANAGEMENT: 'financeManagement',\n  SEO_MANAGEMENT: 'seoManagement',\n  INTERNAL_POLICIES: 'internalPolicies',\n  SETTINGS_CONFIG: 'settingsConfiguration'\n};\n\n// Default role permissions\nexport const DEFAULT_PERMISSIONS = {\n  User: {\n    [MODULES.DASHBOARD]: false,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: false,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: false,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  Visitor: {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: false,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: false,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  Admin: {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: true,\n    [MODULES.PROJECTS]: true,\n    [MODULES.DIGITAL_MEDIA]: true,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: true,\n    [MODULES.HR_MANAGEMENT]: true,\n    [MODULES.FINANCE_MANAGEMENT]: true,\n    [MODULES.SEO_MANAGEMENT]: true,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: true\n  },\n  'Project Manager': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: true,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Data Miner': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: true,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Data Analyst': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: true,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Social Media Manager': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: true,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Human Resource': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: true,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: true\n  },\n  'Graphic Designer': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: true,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Web Developer': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: true,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: true,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: true\n  },\n  'SEO Manager': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: false,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: true,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  },\n  'Marketing': {\n    [MODULES.DASHBOARD]: true,\n    [MODULES.DATA_CENTER]: false,\n    [MODULES.PROJECTS]: false,\n    [MODULES.DIGITAL_MEDIA]: false,\n    [MODULES.TEAM_COMMUNICATION]: true,\n    [MODULES.MARKETING]: true,\n    [MODULES.HR_MANAGEMENT]: false,\n    [MODULES.FINANCE_MANAGEMENT]: false,\n    [MODULES.SEO_MANAGEMENT]: false,\n    [MODULES.INTERNAL_POLICIES]: true,\n    [MODULES.SETTINGS_CONFIG]: false\n  }\n};\n\nexport const RoleProvider = ({ children }) => {\n  const [userPermissions, setUserPermissions] = useState({});\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Fetch users from backend\n  const fetchUsersFromBackend = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return null;\n      \n      const response = await api.get('/users');\n      \n      console.log('Fetched users from backend:', response.data.users);\n      \n      // Transform backend data to match frontend format\n      const transformedUsers = response.data.users.map(user => {\n        // Get default permissions for the user's role\n        const roleDefaultPermissions = DEFAULT_PERMISSIONS[user.role] || {};\n        \n        // Merge backend permissions with role defaults\n        // Backend permissions override role defaults\n        const mergedPermissions = { ...roleDefaultPermissions };\n        \n        // Apply user-specific permissions from backend\n        if (user.permissions) {\n          Object.keys(user.permissions).forEach(key => {\n            // Only override if the permission is explicitly set in backend\n            if (user.permissions[key] !== undefined && user.permissions[key] !== null) {\n              mergedPermissions[key] = user.permissions[key];\n            }\n          });\n        }\n        \n        return {\n          id: user._id,\n          name: user.username,\n          email: user.email,\n          role: user.role,\n          status: user.status || 'Active',\n          access: user.access || [],\n          permissions: mergedPermissions\n        };\n      });\n      \n      console.log('Transformed users:', transformedUsers);\n      \n      return transformedUsers;\n    } catch (error) {\n      console.error('Error fetching users from backend:', error);\n      return null;\n    }\n  };\n\n  // Load user data from localStorage or API\n  useEffect(() => {\n    const loadUserData = async () => {\n      const userData = JSON.parse(localStorage.getItem('user') || '{}');\n      setCurrentUser(userData);\n      \n      // Get user's role permissions\n      if (userData.role) {\n        const permissions = DEFAULT_PERMISSIONS[userData.role] || {};\n        setUserPermissions(permissions);\n      }\n      \n      // Try to fetch from backend first\n      const backendUsers = await fetchUsersFromBackend();\n      \n      if (backendUsers && backendUsers.length > 0) {\n        setUsers(backendUsers);\n        localStorage.setItem('usersData', JSON.stringify(backendUsers));\n      } else {\n        // Fall back to local data\n        const storedUsers = JSON.parse(localStorage.getItem('usersData') || '[]');\n        setUsers(storedUsers);\n      }\n    };\n    \n    loadUserData();\n  }, []);\n\n  // Check if user has permission for a module\n  const hasPermission = (module) => {\n    if (!currentUser || !currentUser.role) return false;\n    \n    // Admin has access to everything\n    if (currentUser.role === 'Admin') return true;\n    \n    // Check specific user permissions (overrides)\n    const userSpecificPermissions = users.find(u => u.id === currentUser.id)?.permissions;\n    if (userSpecificPermissions && userSpecificPermissions.hasOwnProperty(module)) {\n      return userSpecificPermissions[module];\n    }\n    \n    // Check default role permissions\n    return userPermissions[module] || false;\n  };\n\n  // Update user permissions (admin function)\n  const updateUserPermissions = async (userId, permissions) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Check if we're using demo data (string IDs) vs real backend data (ObjectIds)\n      const isDemoData = typeof userId === 'string' && /^[0-9]+$/.test(userId);\n      \n      console.log('User ID:', userId, 'Type:', typeof userId, 'Is demo data:', isDemoData);\n      console.log('Token exists:', !!token);\n      \n      if (token && !isDemoData) {\n        // Update on backend\n        console.log('Making API call to update permissions:', { userId, permissions });\n        console.log('API URL:', `/users/${userId}/permissions`);\n        const response = await api.put(`/users/${userId}/permissions`, { permissions });\n        \n        console.log('API response:', response.data);\n        console.log('User permissions from response:', response.data.user.permissions);\n        console.log('User access from response:', response.data.user.access);\n        \n        // Get the updated permissions from the response\n        const updatedPermissions = response.data.user.permissions || {};\n        \n        // Update local state with the backend response\n        const updatedUsers = users.map(user => {\n          if (user.id === userId) {\n            // Get default permissions for the user's role\n            const roleDefaultPermissions = DEFAULT_PERMISSIONS[user.role] || {};\n            \n            // Merge with updated permissions from backend\n            const mergedPermissions = { ...roleDefaultPermissions };\n            Object.keys(updatedPermissions).forEach(key => {\n              if (updatedPermissions[key] !== undefined && updatedPermissions[key] !== null) {\n                mergedPermissions[key] = updatedPermissions[key];\n              }\n            });\n            \n            // Sync access array with permissions\n            const accessArray = [];\n            if (mergedPermissions[MODULES.DATA_CENTER]) accessArray.push('Data Cluster');\n            if (mergedPermissions[MODULES.PROJECTS]) accessArray.push('Projects');\n            if (mergedPermissions[MODULES.FINANCE_MANAGEMENT]) accessArray.push('Finance');\n            if (mergedPermissions[MODULES.DIGITAL_MEDIA]) accessArray.push('Digital Media');\n            if (mergedPermissions[MODULES.MARKETING]) accessArray.push('Marketing');\n            \n            return { ...user, permissions: mergedPermissions, access: accessArray };\n          }\n          return user;\n        });\n        \n        console.log('Updated users after permission change:', updatedUsers);\n        setUsers(updatedUsers);\n        localStorage.setItem('usersData', JSON.stringify(updatedUsers));\n        \n        // If updating current user, update current permissions\n        if (userId === currentUser?.id) {\n          setUserPermissions(prev => ({ ...prev, ...permissions }));\n        }\n        \n        return { success: true };\n      } else if (isDemoData) {\n        // For demo data, just update locally\n        const updatedUsers = users.map(user => {\n          if (user.id === userId) {\n            const updatedUserPermissions = { ...user.permissions, ...permissions };\n            \n            // Sync access array with permissions\n            const accessArray = [];\n            if (updatedUserPermissions[MODULES.DATA_CENTER]) accessArray.push('Data Cluster');\n            if (updatedUserPermissions[MODULES.PROJECTS]) accessArray.push('Projects');\n            if (updatedUserPermissions[MODULES.FINANCE_MANAGEMENT]) accessArray.push('Finance');\n            if (updatedUserPermissions[MODULES.DIGITAL_MEDIA]) accessArray.push('Digital Media');\n            if (updatedUserPermissions[MODULES.MARKETING]) accessArray.push('Marketing');\n            \n            return { ...user, permissions: updatedUserPermissions, access: accessArray };\n          }\n          return user;\n        });\n        \n        setUsers(updatedUsers);\n        localStorage.setItem('usersData', JSON.stringify(updatedUsers));\n        \n        if (userId === currentUser?.id) {\n          setUserPermissions(prev => ({ ...prev, ...permissions }));\n        }\n        \n        return { success: true };\n      }\n      \n      return { success: false, error: 'No valid token or user data' };\n    } catch (error) {\n      console.error('Error updating user permissions:', error);\n      return { \n        success: false, \n        error: error.response?.data?.message || error.message \n      };\n    }\n  };\n\n  // Get user permissions\n  const getUserPermissions = (userId) => {\n    const user = users.find(u => u.id === userId);\n    if (!user) return {};\n    \n    // User permissions are already merged in fetchUsersFromBackend\n    // Just return the user's permissions\n    return user.permissions || {};\n  };\n\n  // Update user role (admin function)\n  const updateUserRole = async (userId, newRole, newStatus = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Check if we're using demo data (string IDs) vs real backend data (ObjectIds)\n      const isDemoData = typeof userId === 'string' && /^[0-9]+$/.test(userId);\n      \n      if (token && !isDemoData) {\n        // Try to update on backend first (only for real backend data)\n        try {\n          const updateData = { role: newRole };\n          if (newStatus) {\n            updateData.status = newStatus;\n          }\n          await api.put(`/users/${userId}`, updateData);\n        } catch (apiError) {\n          // If the endpoint doesn't exist (404), log and continue with local update\n          if (apiError.response?.status === 404) {\n            console.log('User update endpoint not found, updating locally only');\n            // The local state will still be updated below\n          } else {\n            throw apiError; // Re-throw if it's a different error\n          }\n        }\n      }\n      \n      // Update local state\n      const updatedUsers = users.map(user => {\n        if (user.id === userId) {\n          const updatedUser = { ...user, role: newRole };\n          if (newStatus) {\n            updatedUser.status = newStatus;\n          }\n          return updatedUser;\n        }\n        return user;\n      });\n      \n      setUsers(updatedUsers);\n      localStorage.setItem('usersData', JSON.stringify(updatedUsers));\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error updating user role:', error);\n      \n      // Still update locally as fallback\n      const updatedUsers = users.map(user => {\n        if (user.id === userId) {\n          const updatedUser = { ...user, role: newRole };\n          if (newStatus) {\n            updatedUser.status = newStatus;\n          }\n          return updatedUser;\n        }\n        return user;\n      });\n      \n      setUsers(updatedUsers);\n      localStorage.setItem('usersData', JSON.stringify(updatedUsers));\n      \n      return { \n        success: false, \n        error: error.response?.data?.message || error.message \n      };\n    }\n  };\n\n  // Get all users with their permissions\n  const getAllUsersWithPermissions = () => {\n    return users.map(user => ({\n      ...user,\n      permissions: getUserPermissions(user.id)\n    }));\n  };\n\n  const value = {\n    currentUser,\n    userPermissions,\n    users,\n    hasPermission,\n    updateUserPermissions,\n    updateUserRole,\n    getUserPermissions,\n    getAllUsersWithPermissions,\n    setUsers,\n    fetchUsersFromBackend,\n    MODULES,\n    DEFAULT_PERMISSIONS\n  };\n\n  return (\n    <RoleContext.Provider value={value}>\n      {children}\n    </RoleContext.Provider>\n  );\n};\n\nexport default RoleContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}