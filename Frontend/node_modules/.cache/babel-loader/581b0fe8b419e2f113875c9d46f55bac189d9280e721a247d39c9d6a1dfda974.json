{"ast":null,"code":"// Demo users for testing the role management system\n// In a real application, this data would come from your backend API\nexport const demoUsers=[{id:'1',name:'John Smith',email:'john.admin@noxtmstudio.com',role:'Admin',status:'Active',access:['Data Cluster','Projects','Finance','Digital Media','Marketing'],permissions:{}// Admin gets all permissions by default\n},{id:'2',name:'Sarah Johnson',email:'sarah.pm@noxtmstudio.com',role:'Project Manager',status:'Active',access:['Projects','Marketing'],permissions:{// Custom permissions that override default role permissions\nfinanceManagement:true// Give this PM access to finance\n}},{id:'3',name:'Mike Chen',email:'mike.data@noxtmstudio.com',role:'Data Analyst',status:'Active',access:['Data Cluster'],permissions:{}// Uses default role permissions\n},{id:'4',name:'Emily Rodriguez',email:'emily.social@noxtmstudio.com',role:'Social Media Manager',status:'Active',access:['Digital Media','Marketing'],permissions:{projects:true// Give access to projects as well\n}},{id:'5',name:'David Wilson',email:'david.hr@noxtmstudio.com',role:'Human Resource',status:'Active',access:['Human Resources'],permissions:{}// Uses default role permissions\n},{id:'6',name:'Lisa Parker',email:'lisa.design@noxtmstudio.com',role:'Graphic Designer',status:'Active',access:['Projects','Digital Media'],permissions:{seoManagement:true// Give designer access to SEO tools\n}},{id:'7',name:'Alex Thompson',email:'alex.dev@noxtmstudio.com',role:'Web Developer',status:'Active',access:['Projects'],permissions:{}// Uses default role permissions\n},{id:'8',name:'Rachel Kim',email:'rachel.seo@noxtmstudio.com',role:'SEO Manager',status:'Active',access:['Digital Media','Marketing'],permissions:{}// Uses default role permissions\n},{id:'9',name:'Tom Anderson',email:'tom.miner@noxtmstudio.com',role:'Data Miner',status:'Inactive',access:['Data Cluster'],permissions:{}// Uses default role permissions\n}];// Function to initialize demo data in localStorage\nexport const initializeDemoData=()=>{// Check if demo data already exists\nconst existingData=localStorage.getItem('usersData');if(!existingData){// Initialize with demo data\nlocalStorage.setItem('usersData',JSON.stringify(demoUsers));console.log('Demo users data initialized');}// Set a demo current user (admin for testing)\nconst currentUser=localStorage.getItem('user');if(!currentUser){localStorage.setItem('user',JSON.stringify({id:'1',username:'John Smith',email:'john.admin@noxtmstudio.com',role:'Admin'}));console.log('Demo current user set');}};const demoUsersExport={demoUsers,initializeDemoData};export default demoUsersExport;","map":{"version":3,"names":["demoUsers","id","name","email","role","status","access","permissions","financeManagement","projects","seoManagement","initializeDemoData","existingData","localStorage","getItem","setItem","JSON","stringify","console","log","currentUser","username","demoUsersExport"],"sources":["/Users/aaravpanwar/noxtmstudio/Frontend/src/data/demoUsers.js"],"sourcesContent":["// Demo users for testing the role management system\n// In a real application, this data would come from your backend API\n\nexport const demoUsers = [\n  {\n    id: '1',\n    name: 'John Smith',\n    email: 'john.admin@noxtmstudio.com',\n    role: 'Admin',\n    status: 'Active',\n    access: ['Data Cluster', 'Projects', 'Finance', 'Digital Media', 'Marketing'],\n    permissions: {} // Admin gets all permissions by default\n  },\n  {\n    id: '2',\n    name: 'Sarah Johnson',\n    email: 'sarah.pm@noxtmstudio.com',\n    role: 'Project Manager',\n    status: 'Active',\n    access: ['Projects', 'Marketing'],\n    permissions: {\n      // Custom permissions that override default role permissions\n      financeManagement: true // Give this PM access to finance\n    }\n  },\n  {\n    id: '3',\n    name: 'Mike Chen',\n    email: 'mike.data@noxtmstudio.com',\n    role: 'Data Analyst',\n    status: 'Active',\n    access: ['Data Cluster'],\n    permissions: {} // Uses default role permissions\n  },\n  {\n    id: '4',\n    name: 'Emily Rodriguez',\n    email: 'emily.social@noxtmstudio.com',\n    role: 'Social Media Manager',\n    status: 'Active',\n    access: ['Digital Media', 'Marketing'],\n    permissions: {\n      projects: true // Give access to projects as well\n    }\n  },\n  {\n    id: '5',\n    name: 'David Wilson',\n    email: 'david.hr@noxtmstudio.com',\n    role: 'Human Resource',\n    status: 'Active',\n    access: ['Human Resources'],\n    permissions: {} // Uses default role permissions\n  },\n  {\n    id: '6',\n    name: 'Lisa Parker',\n    email: 'lisa.design@noxtmstudio.com',\n    role: 'Graphic Designer',\n    status: 'Active',\n    access: ['Projects', 'Digital Media'],\n    permissions: {\n      seoManagement: true // Give designer access to SEO tools\n    }\n  },\n  {\n    id: '7',\n    name: 'Alex Thompson',\n    email: 'alex.dev@noxtmstudio.com',\n    role: 'Web Developer',\n    status: 'Active',\n    access: ['Projects'],\n    permissions: {} // Uses default role permissions\n  },\n  {\n    id: '8',\n    name: 'Rachel Kim',\n    email: 'rachel.seo@noxtmstudio.com',\n    role: 'SEO Manager',\n    status: 'Active',\n    access: ['Digital Media', 'Marketing'],\n    permissions: {} // Uses default role permissions\n  },\n  {\n    id: '9',\n    name: 'Tom Anderson',\n    email: 'tom.miner@noxtmstudio.com',\n    role: 'Data Miner',\n    status: 'Inactive',\n    access: ['Data Cluster'],\n    permissions: {} // Uses default role permissions\n  }\n];\n\n// Function to initialize demo data in localStorage\nexport const initializeDemoData = () => {\n  // Check if demo data already exists\n  const existingData = localStorage.getItem('usersData');\n  \n  if (!existingData) {\n    // Initialize with demo data\n    localStorage.setItem('usersData', JSON.stringify(demoUsers));\n    console.log('Demo users data initialized');\n  }\n  \n  // Set a demo current user (admin for testing)\n  const currentUser = localStorage.getItem('user');\n  if (!currentUser) {\n    localStorage.setItem('user', JSON.stringify({\n      id: '1',\n      username: 'John Smith',\n      email: 'john.admin@noxtmstudio.com',\n      role: 'Admin'\n    }));\n    console.log('Demo current user set');\n  }\n};\n\nconst demoUsersExport = {\n  demoUsers,\n  initializeDemoData\n};\n\nexport default demoUsersExport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}