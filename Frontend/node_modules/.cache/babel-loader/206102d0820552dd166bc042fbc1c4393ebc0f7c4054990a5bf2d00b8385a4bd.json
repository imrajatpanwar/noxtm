{"ast":null,"code":"import _objectSpread from\"C:/exe/noxtm/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{FiBell,FiX,FiCheck,FiInfo,FiAlertCircle}from'react-icons/fi';import{useRole}from'../contexts/RoleContext';import'./NotificationCenter.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NotificationCenter(){const{currentUser,permissionUpdateTrigger}=useRole();const[notifications,setNotifications]=useState([]);const[isOpen,setIsOpen]=useState(false);const[unreadCount,setUnreadCount]=useState(0);// Add notification when permissions change\nuseEffect(()=>{if(permissionUpdateTrigger>0){const newNotification={id:Date.now(),type:'permission_update',title:'Permissions Updated',message:'Your access permissions have been modified by an administrator.',timestamp:new Date(),read:false,icon:'shield'};setNotifications(prev=>[newNotification,...prev.slice(0,9)]);// Keep only 10 notifications\nsetUnreadCount(prev=>prev+1);}},[permissionUpdateTrigger]);// Load notifications from localStorage on mount\nuseEffect(()=>{const savedNotifications=JSON.parse(localStorage.getItem(\"notifications_\".concat(currentUser===null||currentUser===void 0?void 0:currentUser.id))||'[]');setNotifications(savedNotifications);setUnreadCount(savedNotifications.filter(n=>!n.read).length);},[currentUser]);// Save notifications to localStorage when they change\nuseEffect(()=>{if(currentUser!==null&&currentUser!==void 0&&currentUser.id){localStorage.setItem(\"notifications_\".concat(currentUser.id),JSON.stringify(notifications));}},[notifications,currentUser]);const markAsRead=notificationId=>{setNotifications(prev=>prev.map(notification=>notification.id===notificationId?_objectSpread(_objectSpread({},notification),{},{read:true}):notification));setUnreadCount(prev=>Math.max(0,prev-1));};const markAllAsRead=()=>{setNotifications(prev=>prev.map(notification=>_objectSpread(_objectSpread({},notification),{},{read:true})));setUnreadCount(0);};const removeNotification=notificationId=>{setNotifications(prev=>{const notification=prev.find(n=>n.id===notificationId);if(notification&&!notification.read){setUnreadCount(count=>Math.max(0,count-1));}return prev.filter(n=>n.id!==notificationId);});};const getNotificationIcon=(type,iconType)=>{switch(iconType){case'shield':return/*#__PURE__*/_jsx(FiAlertCircle,{className:\"notification-icon shield\"});case'info':return/*#__PURE__*/_jsx(FiInfo,{className:\"notification-icon info\"});case'success':return/*#__PURE__*/_jsx(FiCheck,{className:\"notification-icon success\"});default:return/*#__PURE__*/_jsx(FiBell,{className:\"notification-icon default\"});}};const formatTimestamp=timestamp=>{const now=new Date();const notificationTime=new Date(timestamp);const diffInMinutes=Math.floor((now-notificationTime)/(1000*60));if(diffInMinutes<1)return'Just now';if(diffInMinutes<60)return\"\".concat(diffInMinutes,\"m ago\");if(diffInMinutes<1440)return\"\".concat(Math.floor(diffInMinutes/60),\"h ago\");return notificationTime.toLocaleDateString();};return/*#__PURE__*/_jsxs(\"div\",{className:\"notification-center\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"notification-bell \".concat(unreadCount>0?'has-unread':''),onClick:()=>setIsOpen(!isOpen),title:\"Notifications\",children:[/*#__PURE__*/_jsx(FiBell,{}),unreadCount>0&&/*#__PURE__*/_jsx(\"span\",{className:\"notification-badge\",children:unreadCount>99?'99+':unreadCount})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"notification-dropdown\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notifications\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"notification-actions\",children:[unreadCount>0&&/*#__PURE__*/_jsx(\"button\",{className:\"mark-all-read\",onClick:markAllAsRead,title:\"Mark all as read\",children:/*#__PURE__*/_jsx(FiCheck,{})}),/*#__PURE__*/_jsx(\"button\",{className:\"close-notifications\",onClick:()=>setIsOpen(false),title:\"Close\",children:/*#__PURE__*/_jsx(FiX,{})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-list\",children:notifications.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-notifications\",children:[/*#__PURE__*/_jsx(FiBell,{className:\"no-notifications-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No notifications\"})]}):notifications.map(notification=>/*#__PURE__*/_jsxs(\"div\",{className:\"notification-item \".concat(notification.read?'read':'unread'),onClick:()=>!notification.read&&markAsRead(notification.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"notification-icon-wrapper\",children:getNotificationIcon(notification.type,notification.icon)}),/*#__PURE__*/_jsxs(\"div\",{className:\"notification-text\",children:[/*#__PURE__*/_jsx(\"h4\",{children:notification.title}),/*#__PURE__*/_jsx(\"p\",{children:notification.message}),/*#__PURE__*/_jsx(\"span\",{className:\"notification-time\",children:formatTimestamp(notification.timestamp)})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-notification\",onClick:e=>{e.stopPropagation();removeNotification(notification.id);},title:\"Remove notification\",children:/*#__PURE__*/_jsx(FiX,{})})]},notification.id))})]})]});}export default NotificationCenter;","map":{"version":3,"names":["React","useState","useEffect","FiBell","FiX","FiCheck","FiInfo","FiAlertCircle","useRole","jsx","_jsx","jsxs","_jsxs","NotificationCenter","currentUser","permissionUpdateTrigger","notifications","setNotifications","isOpen","setIsOpen","unreadCount","setUnreadCount","newNotification","id","Date","now","type","title","message","timestamp","read","icon","prev","slice","savedNotifications","JSON","parse","localStorage","getItem","concat","filter","n","length","setItem","stringify","markAsRead","notificationId","map","notification","_objectSpread","Math","max","markAllAsRead","removeNotification","find","count","getNotificationIcon","iconType","className","formatTimestamp","notificationTime","diffInMinutes","floor","toLocaleDateString","children","onClick","e","stopPropagation"],"sources":["C:/exe/noxtm/Frontend/src/components/NotificationCenter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FiBell, FiX, FiCheck, FiInfo, FiAlertCircle } from 'react-icons/fi';\r\nimport { useRole } from '../contexts/RoleContext';\r\nimport './NotificationCenter.css';\r\n\r\nfunction NotificationCenter() {\r\n  const { currentUser, permissionUpdateTrigger } = useRole();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  // Add notification when permissions change\r\n  useEffect(() => {\r\n    if (permissionUpdateTrigger > 0) {\r\n      const newNotification = {\r\n        id: Date.now(),\r\n        type: 'permission_update',\r\n        title: 'Permissions Updated',\r\n        message: 'Your access permissions have been modified by an administrator.',\r\n        timestamp: new Date(),\r\n        read: false,\r\n        icon: 'shield'\r\n      };\r\n      \r\n      setNotifications(prev => [newNotification, ...prev.slice(0, 9)]); // Keep only 10 notifications\r\n      setUnreadCount(prev => prev + 1);\r\n    }\r\n  }, [permissionUpdateTrigger]);\r\n\r\n  // Load notifications from localStorage on mount\r\n  useEffect(() => {\r\n    const savedNotifications = JSON.parse(localStorage.getItem(`notifications_${currentUser?.id}`) || '[]');\r\n    setNotifications(savedNotifications);\r\n    setUnreadCount(savedNotifications.filter(n => !n.read).length);\r\n  }, [currentUser]);\r\n\r\n  // Save notifications to localStorage when they change\r\n  useEffect(() => {\r\n    if (currentUser?.id) {\r\n      localStorage.setItem(`notifications_${currentUser.id}`, JSON.stringify(notifications));\r\n    }\r\n  }, [notifications, currentUser]);\r\n\r\n  const markAsRead = (notificationId) => {\r\n    setNotifications(prev => prev.map(notification => \r\n      notification.id === notificationId \r\n        ? { ...notification, read: true }\r\n        : notification\r\n    ));\r\n    setUnreadCount(prev => Math.max(0, prev - 1));\r\n  };\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications(prev => prev.map(notification => ({ ...notification, read: true })));\r\n    setUnreadCount(0);\r\n  };\r\n\r\n  const removeNotification = (notificationId) => {\r\n    setNotifications(prev => {\r\n      const notification = prev.find(n => n.id === notificationId);\r\n      if (notification && !notification.read) {\r\n        setUnreadCount(count => Math.max(0, count - 1));\r\n      }\r\n      return prev.filter(n => n.id !== notificationId);\r\n    });\r\n  };\r\n\r\n  const getNotificationIcon = (type, iconType) => {\r\n    switch (iconType) {\r\n      case 'shield':\r\n        return <FiAlertCircle className=\"notification-icon shield\" />;\r\n      case 'info':\r\n        return <FiInfo className=\"notification-icon info\" />;\r\n      case 'success':\r\n        return <FiCheck className=\"notification-icon success\" />;\r\n      default:\r\n        return <FiBell className=\"notification-icon default\" />;\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const now = new Date();\r\n    const notificationTime = new Date(timestamp);\r\n    const diffInMinutes = Math.floor((now - notificationTime) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Just now';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n    return notificationTime.toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-center\">\r\n      <button \r\n        className={`notification-bell ${unreadCount > 0 ? 'has-unread' : ''}`}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        title=\"Notifications\"\r\n      >\r\n        <FiBell />\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">{unreadCount > 99 ? '99+' : unreadCount}</span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"notification-dropdown\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notifications</h3>\r\n            <div className=\"notification-actions\">\r\n              {unreadCount > 0 && (\r\n                <button \r\n                  className=\"mark-all-read\"\r\n                  onClick={markAllAsRead}\r\n                  title=\"Mark all as read\"\r\n                >\r\n                  <FiCheck />\r\n                </button>\r\n              )}\r\n              <button \r\n                className=\"close-notifications\"\r\n                onClick={() => setIsOpen(false)}\r\n                title=\"Close\"\r\n              >\r\n                <FiX />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"notification-list\">\r\n            {notifications.length === 0 ? (\r\n              <div className=\"no-notifications\">\r\n                <FiBell className=\"no-notifications-icon\" />\r\n                <p>No notifications</p>\r\n              </div>\r\n            ) : (\r\n              notifications.map(notification => (\r\n                <div \r\n                  key={notification.id}\r\n                  className={`notification-item ${notification.read ? 'read' : 'unread'}`}\r\n                  onClick={() => !notification.read && markAsRead(notification.id)}\r\n                >\r\n                  <div className=\"notification-content\">\r\n                    <div className=\"notification-icon-wrapper\">\r\n                      {getNotificationIcon(notification.type, notification.icon)}\r\n                    </div>\r\n                    <div className=\"notification-text\">\r\n                      <h4>{notification.title}</h4>\r\n                      <p>{notification.message}</p>\r\n                      <span className=\"notification-time\">\r\n                        {formatTimestamp(notification.timestamp)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <button \r\n                    className=\"remove-notification\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      removeNotification(notification.id);\r\n                    }}\r\n                    title=\"Remove notification\"\r\n                  >\r\n                    <FiX />\r\n                  </button>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotificationCenter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}