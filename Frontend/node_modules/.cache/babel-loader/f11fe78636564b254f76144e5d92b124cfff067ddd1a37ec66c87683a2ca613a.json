{"ast":null,"code":"var _jsxFileName = \"C:\\\\exe\\\\noxtm\\\\Frontend\\\\src\\\\components\\\\BotgitData.js\";\nimport React from 'react';\nimport { Table, Container } from 'react-bootstrap';\nimport './BotgitData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotgitData = () => {\n  // TODO: This will be replaced with actual data fetching logic\n  const scrapedData = [{\n    name: 'Sample Name',\n    location: 'Sample Location',\n    profileUrl: 'https://linkedin.com/sample',\n    email: 'sample@email.com',\n    phone: '+1234567890',\n    role: 'Sample Role',\n    timestamp: new Date().toISOString()\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"botgit-data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LinkedIn Scraped Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Profile URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: scrapedData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: entry.profileUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: entry.profileUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = BotgitData;\nexport default BotgitData;\nvar _c;\n$RefreshReg$(_c, \"BotgitData\");","map":{"version":3,"names":["React","Table","Container","jsxDEV","_jsxDEV","BotgitData","scrapedData","name","location","profileUrl","email","phone","role","timestamp","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","entry","index","href","target","rel","toLocaleString","_c","$RefreshReg$"],"sources":["C:/exe/noxtm/Frontend/src/components/BotgitData.js"],"sourcesContent":["import React from 'react';\r\nimport { Table, Container } from 'react-bootstrap';\r\nimport './BotgitData.css';\r\n\r\nconst BotgitData = () => {\r\n  // TODO: This will be replaced with actual data fetching logic\r\n  const scrapedData = [\r\n    {\r\n      name: 'Sample Name',\r\n      location: 'Sample Location',\r\n      profileUrl: 'https://linkedin.com/sample',\r\n      email: 'sample@email.com',\r\n      phone: '+1234567890',\r\n      role: 'Sample Role',\r\n      timestamp: new Date().toISOString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Container className=\"botgit-data-container\">\r\n      <h2>LinkedIn Scraped Data</h2>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Location</th>\r\n            <th>Profile URL</th>\r\n            <th>E-mail</th>\r\n            <th>Phone</th>\r\n            <th>Role</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {scrapedData.map((entry, index) => (\r\n            <tr key={index}>\r\n              <td>{entry.name}</td>\r\n              <td>{entry.location}</td>\r\n              <td>\r\n                <a href={entry.profileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {entry.profileUrl}\r\n                </a>\r\n              </td>\r\n              <td>{entry.email}</td>\r\n              <td>{entry.phone}</td>\r\n              <td>{entry.role}</td>\r\n              <td>{new Date(entry.timestamp).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BotgitData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}